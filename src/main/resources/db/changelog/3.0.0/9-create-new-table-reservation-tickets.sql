CREATE TABLE IF NOT EXISTS TB_RESERVATIONS_TICKETS (
    RT_ID BIGSERIAL PRIMARY KEY NOT NULL,
    RT_PRICE_PAID NUMERIC(38, 2) NOT NULL,
    RT_TYPE TEXT CHECK (RT_TYPE IN ('NORMAL', 'SPECIAL', 'STUDENT')),
    RT_CREATED_AT TIMESTAMP NOT NULL DEFAULT now(),
    RT_UPDATED_AT TIMESTAMP NOT NULL DEFAULT now(),
    RT_RESERVATION_ID BIGSERIAL REFERENCES TB_RESERVATIONS(RES_ID) ON DELETE SET NULL,
    RT_MOVIE_TICKET_ID BIGSERIAL REFERENCES TB_MOVIE_TICKETS(MVT_ID) ON DELETE SET NULL
);

CREATE  FUNCTION update_updated_at_tb_reservations_tickets()
    RETURNS TRIGGER AS $$
BEGIN
    NEW.RT_UPDATED_AT = now();
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_reservation_tickets_task_updated_on
    BEFORE UPDATE
    ON
        TB_RESERVATIONS_TICKETS
    FOR EACH ROW
EXECUTE PROCEDURE update_updated_at_tb_reservations_tickets();